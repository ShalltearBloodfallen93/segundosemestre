/*clase para las funciones logicas de una lavadora
*/

package Libreria;

/*
*autor: Shalltear93
*/

public class LLFunciones {
    
    //las variables estan encapsuladas para que no puedan ser modificadas.
    private int kilos = 0, llenadoCompleto = 0, TipoDeRopa = 0, LavadoCompleto = 0, SecadoCompleto = 0;
    
    public LLFunciones(int kilos, int TipoDeRopa){
        
        this.kilos = kilos;
        this.TipoDeRopa = TipoDeRopa;
       
        
    }
    private void Llenado(){   //Este metodo sirve para llenar, y verifica si la carga de ropa es la correcta.
        if (kilos <= 12) {   //verifica si la carga de ropa es menor o igual a 12.
            llenadoCompleto = 1;  //Si el llenado es igual a 1, prosigue al siguiente paso.
            System.out.println("Llenando...");
            System.out.println("Llenado completo.");
        }else{  //si la carga de ropa exede los 12 kilos, se muestra un mensaje
            System.out.println("La carga de ropa es muy pesada, reduce la carga. ");
        }
    }
    private void Lavado(){  //este metodo sirve para el lavado.
        Llenado(); //se usa el metodo anterior para verificarlo.
        if (llenadoCompleto == 1) {  //si la variable llenadocompleto es igual a 1 procede.
            if (TipoDeRopa == 1) {  //si el tipo de ropa es 1 - ropa blanca, muestra un mensaje.
                System.out.println("Ropa blanca / Lavado suave.");
                System.out.println("Llavando...");
                LavadoCompleto = 1;  //si el lavadocompleto es igual a 1, procede a verificar la sig. condicion
            }else if (TipoDeRopa == 2){  //aqui si el tipo de ropa es igual a 2 se muestra su respectivo mensaje.
                System.out.println("Ropa de color / Lavado intenso.");
                System.out.println("Lavando...");
                LavadoCompleto = 1;  //despues de verificar el tipo de ropa, completa el lavado.
            }else{ //si se ingresa otro valor, se muestra el mensaje correspondiente.
               System.out.println("El tipo de ropa no esta disponible.");
               System.out.println("Se lavara como ropa de color / Lavando ropa intenso."); 
               LavadoCompleto = 1; //se verifica el lavado completo y por default se lavara como ropa de color.
                    
            }
        }
    }
    private void Secado(){ //una vez terminado el lavado, este met. sirve para el secado.
        Lavado(); //se llama al metodo anterior para su verificacion.
        if (LavadoCompleto == 1) { //si el lavadocompleto es igual a 1, procede con el sig. mensaje.
            System.out.println("Secando...");
            SecadoCompleto = 1; //si el secado esta completo procede al sig. metodo.
            
        }
    }
    public void CicloFinalizado(){ //este metodo es publico, y es del ciclo finalizado.
       Secado(); //una vez mas llamamos al metodo anterior para su verificacion.
        if (SecadoCompleto == 1) { // si el secadocompleto es igual a 1, muestra el sig. mensaje.
            System.out.println("Tu ropa esta lista. ");
            System.out.println("Ciclo finalizado. ");
            
        }
    }
    
    //setter y getter
    
    /*el metodo get sirve para dar acceso desde otra clase a nuestras variables encapsuladas
    y se debe retornar un valor por medio de la palbra return.
    suele ponerse el metodo al principio y despues nombrarla, como se ve abajo para llevar un orden.
    */
    
    public int getTipoDeRopa(){
        return TipoDeRopa;
    }
    
    /*el metodo set sirve para darle acceso y asi se pueda modificar una variable encapsulada desde
    otra clase, suele ponerse el metodo al principio y despues nombrarla, como se ve abajo.
    no retorna un valor de manera automatica. por eso se usa el void.
    */
    
    public void setTipoDeRopa(int TipoDeRopa){
        this.TipoDeRopa = TipoDeRopa; 
        
        /*la palabra this indica que usaremos las variables de esta clase,
        las cuales estan encapsuladas, si tenemos que crear varios metodos setter y getter, para diferentes
        variables(atributos), se da click derecho... refactor y click en encapsulate fields, esto nos
        permitira crear los metodos setter y getter necesarios para nuestras variables de manera automatica.
        */
        
    }
}
